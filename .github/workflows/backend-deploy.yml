name: Deploy Strapi Backend to Cloud Run

on:
  push:
    branches: [main, master]
    paths:
      - 'backend/**'
      - 'uz-real-estate-aggregator/backend/**'
      - '.github/workflows/backend-deploy.yml'
  # Allow manual workflow dispatch
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: 'europe-west1'
  ARTIFACT_REGISTRY_REPO: 'uz-rea-backend-repo'
  SERVICE_NAME: 'uz-rea-backend'
  IMAGE_NAME: backend-image

jobs:
  build-and-deploy:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

    - name: Build Docker image
      # Removed working-directory, using cd instead
      run: |-
        cd backend && docker build . -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Push Docker image to Artifact Registry
      run: |-
        docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Deploy to Cloud Run
      id: deploy
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.GCP_REGION }}
        image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        # Use env_vars instead of secrets for simplicity with GitHub Secrets
        env_vars: |
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_PORT=5432
          DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_SSL=true
          GCS_BUCKET_NAME=${{ secrets.GCS_BUCKET_NAME }}
          GCS_SERVICE_ACCOUNT_KEY_JSON=${{ secrets.GCS_SERVICE_ACCOUNT_KEY_JSON }}
          GCS_PUBLIC_FILES=true
          GCS_UNIFORM=false
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}
          API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}
          APP_KEYS=${{ secrets.APP_KEYS }}
          # Ensure NODE_ENV is set for production configurations
          NODE_ENV=production

    - name: Output Cloud Run service URL
      run: echo "Cloud Run service URL:" ${{ steps.deploy.outputs.url }} # Corrected syntax
